import { Markup, Telegraf } from "telegraf";
import { Command } from "./commad.class";
import { IBotContext } from "../context/context.interface";
import { WebScrapper } from "../utils/scrapper";
import { ANILIBRIA_SCHEDULE } from "../constants/constants";

export class StartCommand extends Command{

    constructor(bot: Telegraf<IBotContext>){
        super(bot);
    }

    handle(): void {
        const scrapper = new WebScrapper();

        this.bot.start(ctx => {
            ctx.reply("–î–∞–Ω–Ω—ã–µ –±–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –æ –∞–Ω–∏–º–µ, –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è —Å —Å–∞–π—Ç–∞ https://www.anilibria.tv/" + '\n'
                + "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.",
              Markup.keyboard([
                ["üîé –ù–∞–π—Ç–∏", "üß∞ –°–º–æ—Ç—Ä–µ—Ç—å"], ["üì© –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"],
                ["üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "üìñ –ò—Å—Ç–æ—Ä–∏—è "], ["üíå –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ "]
              ]).resize() 
            )
        })

        this.bot.action('schedule', (ctx) => {
            ctx.reply("–í—ã–±–µ—Ä–∏ —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç",
            Markup.inlineKeyboard([
                Markup.button.callback("–ù–∞ –Ω–µ–¥–µ–ª—é", "scheduleWeek"),
                Markup.button.callback("–ù–∞ –¥–µ–Ω—å", "scheduleDay")
              ], {columns: 1}) 
            )
        })

        this.bot.action('scheduleWeek', async (ctx) => {
            const scheduleWeek = await scrapper.getScheduleWeek(ANILIBRIA_SCHEDULE);
            ctx.reply('–†–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:')
            scheduleWeek.map(schedule =>{ 
                ctx.reply(`${schedule.day}:`)
                schedule.scheduleDay.map(
                    anime => {
                        ctx.reply(
                             `–ù–∞–∑–≤–∞–Ω–∏–µ: ${anime.name}` + '\n' + 
                             `–ö–æ–ª. —Å–µ—Ä–∏–π: ${anime.series}` + '\n' +
                             `–û–ø–∏—Å–∞–Ω–∏–µ: ${anime.description}` + '\n' +
                             `–°—Å—ã–ª–∫–∞: ${anime.link}` + '\n' 
                        )
                    }
                )
            })
        })

        this.bot.action('scheduleDay', async(ctx) => {
            const scheduleToday = await scrapper.getScheduleDay(ANILIBRIA_SCHEDULE);
            ctx.reply(`${scheduleToday.day}:`)
            scheduleToday.scheduleDay.map(
                anime => {
                    ctx.reply(
                         `–ù–∞–∑–≤–∞–Ω–∏–µ: ${anime.name}` + '\n' + 
                         `–ö–æ–ª. —Å–µ—Ä–∏–π: ${anime.series}` + '\n' +
                         `–û–ø–∏—Å–∞–Ω–∏–µ: ${anime.description}` + '\n' +
                         `–°—Å—ã–ª–∫–∞: ${anime.link}` + '\n' 
                    )
                }
            )
        })
    }
    
}